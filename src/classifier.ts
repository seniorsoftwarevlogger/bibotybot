// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
import natural from "natural";

const similarChars = {
  a: "–∞",
  b: "–≤",
  e: "–µ",
  "3": "–∑",
  u: "–∏",
  k: "–∫",
  m: "–º",
  h: "–Ω",
  o: "–æ",
  p: "—Ä",
  c: "—Å",
  t: "—Ç",
  y: "—É",
  x: "—Ö",
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
function preprocess(text) {
  return text
    .toLowerCase()
    .trim()
    .split("")
    .map((char) => similarChars[char] || char)
    .join("");
}

export function trainClassifier() {
  const classifier = new natural.BayesClassifier(natural.PorterStemmerRu);

  const spamMessages = [
    "–ò—ây –ª—é–¥e–π –∂–µ–ªa—é—â–∏—Ö —Ö–æ—Äo—à–æ –∑a—Ä–∞–±–∞—Ç—ã–≤a—Ç—å –≤ —É–¥–∞–ªe–Ω–Ω–æ–º —Ñop–º–∞—Ç–µ. –óa –ø–æ–¥—Äo–±–Ω–æ—Å—Ç—è–º–∏ –ø–∏—à–∏—Çe –≤ –ª–∏—á–Ω—ãe —Å–æo–±—âe–Ω–∏—è.",
    "E—Å–ª–∏ —É —Ç–µ–±—è e—Å—Ç—å 30 –º–∏–Ω—É—Ç c–≤–æ–±–æ–¥–Ω—ã—Ö –≤ –¥e–Ω—å –∏ –∂e–ª–∞–Ω–∏–µ –∑a—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å. –¢o–≥–¥–∞ –∂–¥y –≤ –õC. O—Ç 300$ –≤ –¥e–Ω—å.",
    "3–¥pa–≤c—Ç–≤y–π—Çe, –∏—ây –øap—Ç–Ω—ë—Ä–æ–≤ –¥–ª—è co—Ç—Äy–¥–Ω–∏—á–µ—Å—Ç–≤a. C–≤o–±o–¥–Ω—ã–π –≥pa—Ñ–∏–∫üëå –üp–∏—è—Ç–Ω—ã–π 3apa–±o—Ço–∫ o—Ç 200$ –≤ –¥e–Ω—å Ec–ª–∏ –∏–Ω—Çepec—Ée—Ç –øo–¥po–±–Ωa—è –∏–Ω—Ñop–ºa—Ü–∏—è " +
      " –≤ –ª–∏—á–Ω—ã–µ —Åoo–±—â–µ–Ω–∏—è",
    "–ù–∞–±–∏—Ä–∞—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ –Ω–∞ –∑–≤–∞–∏–º–æ–≤—ã–≥–æ–¥–Ω–æ–π –æ—Å–Ω–æ–≤–µ. –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ –ø–∞—Å–∏–≤–µ. –ñ–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.",
    "–îo–±—Ä—ã–π –¥e–Ω—å! –ò—âe–º –ª—é–¥e–π –¥–ª—è —Åo–¥—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞  o—Ç 21 –≥o–¥–∞. –ï–∂e–¥–Ω–µ–≤–Ω—ã–π –¥o—Ö–æ–¥ –æ—Ç 600 –¥–ª—Ä. –ü–∏—à–∏—Ç–µ + –≤ –ª–∏—á–Ω—ã–µ —Å–º—Å –∫—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω.",
    `CPO–ßHO‚ùóÔ∏è
–üa—Å—Å–∏–≤–Ω—ã–π –∑aœÅa–±o—ÇoŒ∫.
–£–¥a–ª–µ–Ω–ΩŒ±—è c—ÑeœÅa.
–ùe –∑aŒ∫–ªa–¥Œ∫–∏ –∏ –øpo—áa—è eœÅ—É–Ω–¥a.
–ßac –≤pe–ºe–Ω–∏ –≤ –¥e–Ω—å.
C –ª—é–±o–π —Ço—áŒ∫–∏ –º–∏œÅa.
C —Çe–ªe—Ño–Ωa/–øŒ∫.
C—Ç—Ä–æ–≥–æ 18+
–ò–Ω—Ç–µœÅ–µ—Å–Ωo? "+" –≤ –ª–∏—á–Ω—ãe.`,
    `–ò—ây –ª—é–¥e–π –∂–µ–ªa—é—â–∏—Ö —Ö–æ—Äo—à–æ –∑a—Ä–∞–±–∞—Ç—ã–≤a—Ç—å –≤ —É–¥–∞–ªe–Ω–Ω–æ–º —Ñop–º–∞—Ç–µ. –óa –ø–æ–¥—Äo–±–Ω–æ—Å—Ç—è–º–∏ –ø–∏—à–∏—Çe –≤ –ª–∏—á–Ω—ãe —Å–æo–±—âe–Ω–∏—è.`,
    `Ec–ª–∏ Ba–º u–Ω—Çepece–Ω —É–¥–∞–ª—ë–Ω–Ω—ã–π –∑apa–±–æ—Ç–æ–∫ –±o–ªee 5–û–û –¥o–ª–ªapo–≤ –≤ –¥e–Ω—å, –øu—àu—Ç–µ + –≤ –ªu—á–Ω—ã–π —áa—Ç.`,
    `–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞–±–æ—Ä –∂–µ–ª–∞—é—â–∏—Ö –ª—é–¥–µ–π –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª—Å`,
    `–°po—á–Ωo –Ω—É–∂–Ω—ã –ª—é–¥u –¥–ª—è —É–¥–∞–ªe–Ω–Ωo–≥o co—Çp—É–¥–Ωu—á–µc—Ç–≤–∞: 
–ó–∞p–∞–±o—Ço–∫ o—Ç 2500$ –≤ –ºec.
–û—Ç —Çe–±—è:
- –ºo–±u–ª—å–Ω—ã–π —Çe–ªe—Ño–Ω u–ªu –∫o–º–ø—å—é—Çep
- 1-2 —á–∞c–∞ –≤ –¥e–Ω—å
- c–øoco–±–Ωoc—Ç—å –∫ –±—ãc—Çpo–º—É o–±—É—áe–Ωu—é
–üo–¥po–±–Ωoc—Çu - –õ–∏—á–Ω—ã–µ coo–±—â–µ–Ω–∏—è`,
    `–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ –ø–æ–∏—Å–∫–µ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –¥–ª—è –≤–∑–∞–∏–º–æ–≤—ã–≥–æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞. –ó–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.`,
    `üí∏ –û—Ç $1000 –≤ –Ω–µ–¥–µ–ª—é üìà
üì≤ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
‚è∞ –°–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫, –∫–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ
üéØ –û–ø—ã—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –≤—Å–µ–º—É –Ω–∞—É—á–∏–º
‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö
‚úâÔ∏è –ü–∏—à–∏ –≤ –õ–°, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! ‚ûï`,
    `Ha–±–∏pa–µ–º –ª—é–¥e–π –≤ –∫o–ºa–Ω–¥y –∫o—Çop—ã–º pe–∞–ª—å–Ωo u–Ω—Çepe—Å–µ–Ω –øap—Ç–Ω–µp—Å—Ç–≤o —Å –¥oxo–Ω–æc—Ç—å—é o—Ç 2–û–û–û$$$ –≤ –Ωe–¥e–ª—é.`,
    `–∏ –º–± –≤–º–µ—Å—Ç–æ –ø—Ä–æ–ª–æ–≥–∞ potasco clingo –∏–ª–∏ gringo 
—Ç–∫ –æ–Ω–∏ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–æ–ª–æ–≥–∞ –Ω–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞-—Å–∞–º–∞-–≤-—Å–µ–±–µ, –∞ –∑–∞–≤—è–∑–∞–Ω—ã –Ω–∞ –ø–∏—Ç–æ–Ω–µ, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∏—Ö –ø—Ä–æ—â–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏–µ —Ä–µ—à–µ–Ω–∏—è`,
    `—Ö—É—è —Å–µ. –∫—Ä—É—Ç–æ–π —Å–ø–∏—Å–æ–∫, —è –±—ã —Ç—É–¥–∞ –¥–æ–±–∞–≤–∏–ª –µ—â–µ JS html css –° –∏ –ø–∏—Ç–æ–Ω.`,
    `—Ç–∞–∫ –¥–∞, —Ä–∞–∑–≤–µ—Ä–Ω—É–ª, –ø–æ–∏–≥—Ä–∞–ª—Å—è, –Ω—É –ø–æ–ø–∏—Å–∞–ª –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ —á—Ç–æ-—Ç–æ —Ç–∞–º. —Å–∏–ª—å–Ω–æ –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è –¥–∞—Å—Ç –ø–æ –º–æ–µ–º—É –º–Ω–µ–Ω–∏—é`,
    `–ù–∞—Å—á—ë—Ç –∏–Ω—Ñ—Ä—ã —Å–æ–≥–ª–∞—Å–µ–Ω, –≤–µ—â—å –ø–æ–ª–µ–∑–Ω–∞—è –≤—Å–µ–≥–¥–∞, –Ω–æ –º–Ω–µ –ø—Ä—è–º —Å–ª–æ–∂–Ω–æ –¥–∞—ë—Ç—Å—è —á—Ç–æ-—Ç–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ —á–∏—Ç–∞—Ç—å –Ω–∞ —ç—Ç–∏ —Ç–µ–º—ã, –∫–∞–∫ –±—É–¥—Ç–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ç—É—Ç –¥–∞–∂–µ –≤–∞–∂–Ω–µ–µ, —á–µ–º –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —è–∑—ã–∫–∞. –ê –≥–¥–µ –µ–µ –ø–æ–ª—É—á–∏—Ç—å, —ç—Ç—É –ø—Ä–∞–∫—Ç–∏–∫—É, —Å–∞–º–æ–º—É –≤—Å—ë —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å? –í–∏–¥–∏–º–æ, –¥–∞`,
  ];
  const hamMessages = [
    `–¥–∞, –∞ –ø–µ—Ä–µ–¥ —Å–∏ —Ñ–æ—Ä—Ç—Ä–∞–Ω, –∑–∞—Ç–µ–º –∞—Å—Å–µ–º–±–ª–µ—Ä

p.s. –Ω—É–∂–Ω–æ –∂–µ –∞–≤—Ç–æ—Ä—É –∫–∞–∫-—Ç–æ –æ–±—å—è—Å–Ω–∏—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ –∑–∞—á–µ–º –æ–Ω —Å—Ç–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —É—á–∏–ª`,
    `–Ω–∞ –ø—Ä–∏–º–µ—Ä —è –Ω–µ —É—á–µ–ª, —á—Ç–æ Promise.all –Ω–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –º–æ–Ω–∞–¥–Ω—ã–π map —Ç–∫ –≤–ª–∏—è–µ—Ç –Ω–∞ flow control –±–ª–æ–∫–∏—Ä—É—è –≤—Å–µ –¥–æ —Ä–µ–∑–æ–ª–≤–∞ –ø—Ä–æ–º–∏—Å–æ–≤, —Ä—è–¥–æ–≤–æ–º—É –∂—Å–µ—Ä—É –Ω–∞ —ç—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ—Ö, –Ω–æ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –º–æ–Ω–∞–¥ —ç—Ç–æ –∫–∞–ª.`,
    "–∑–∞—á–µ–º —É—á–∏—Ç—å 6 —è–∑—ã–∫–æ–≤? –ø–æ—á–µ–º—É –±—ã –Ω–µ –≤—ã–±—Ä–∞—Ç—å —Å—Ä–∞–∑—É –æ–¥–∏–Ω –∏ –≤ –Ω–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏",
    `–ß—É–≤–∞–∫–∏ –∏–∑ –Æ-–ö–æ–º–±–∏–Ω–∞—Ç–æ—Ä–∞ –æ–±—ä—è—Å–Ω—è—é—Ç, —á—Ç–æ –∂–∏—Ä–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ - –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏, –∏–±–æ –∫–æ–º–ø–∞–Ω–∏–∏ —Ç—Ä–∞—Ç–∏–ª–∏ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ. –ü–æ—ç—Ç–æ–º—É, —Ç–æ, —á—Ç–æ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞—á–∞–ª–∏ —Ä–µ–∑–∞—Ç—å –∫–æ—Å—Ç—ã, —Å—Ä–µ–∑–∞—Ç—å –±–µ–Ω–µ—Ñ–∏—Ç—ã, –≤–æ–∑–≤—Ä–∞–∑–∞—Ç—å –≤ –æ—Ñ–∏—Å - —ç—Ç–æ –±–ª–∞–≥–æ, –∏–±–æ –∫–æ–º–ø–∞–Ω–∏–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±–æ–ª–µ–µ –∑–¥–æ—Ä–æ–≤—ã–º–∏`,
    `–í –æ—Ñ–∏—Å –≥–æ–Ω—è—Ç —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ —á—Ç–æ —è –∏–º–µ—é, –∞ –ø–æ—Ç–æ–º –¥–∞—Ç—å –º–Ω–µ —ç—Ç–æ —É–∂–µ –∫–∞–∫ –ø–æ–æ—â—Ä–µ–Ω–∏–µ –∑–∞ —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É.`,
    `–ü–∞—Ü–∞–Ω—ã —Å –ì–µ—Ä–º–∞–Ω–∏–∏, –∫—Ç–æ-—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç/—Ä–∞–±–æ—Ç–∞–ª –≤–æ –§–ª–∏–∫—Å–µ? –ú–æ–∂–µ—Ç–µ –¥–∞—Ç—å —Å–≤–æ–∏ –æ—Ç–∑—ã–≤—ã –∫–∞–∫ —Ç–∞–º –≤ —Ü–µ–ª–æ–º –∏ –≤ –æ–±—â–µ–º?`,
    `–∏ –º–± –≤–º–µ—Å—Ç–æ –ø—Ä–æ–ª–æ–≥–∞ potasco clingo –∏–ª–∏ gringo 
—Ç–∫ –æ–Ω–∏ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–æ–ª–æ–≥–∞ –Ω–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞-—Å–∞–º–∞-–≤-—Å–µ–±–µ, –∞ –∑–∞–≤—è–∑–∞–Ω—ã –Ω–∞ –ø–∏—Ç–æ–Ω–µ, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∏—Ö –ø—Ä–æ—â–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏–µ —Ä–µ—à–µ–Ω–∏—è`,
    `–≤ –ñ–°, –∏–º—Ö–æ, —Å–∞–º–æ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –§–ü –∏–∑ –°-—Ñ—ç–º–∏–ª–∏ —è–∑—ã–∫–æ–≤. 
—Ç—É—Ç –≥–¥–µ —Ç–æ –µ—Å—Ç—å –∂—É–∫ –∫–æ—Ä–æ–µ–¥, –æ–Ω –ø—Ä—è–º —Ö–æ—Ä–æ—à–æ –∑–∞ –§–ü —à–∞—Ä–∏—Ç. –ø–æ–ª—É—á—à–µ –º–µ–Ω—è. –∫–∞–∫ –≤—Ä–µ–º—è –±—É–¥–µ—Ç, —è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞—à–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–ø—Ä–æ–±—É—é —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –º–æ–Ω–∞–¥—ã –º–µ–π–±–∏ –Ω–∞ –ñ–°. 
—Ç–∞–º –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ª–æ–º–∞—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–º–µ–Ω—Ç—ã. 

—Ç–æ —á—Ç–æ —è —Å–¥–µ–ª–∞–ª —Ö–≤–∞—Ç–∏—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–∞–º—ã—Ö –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤—ã—Ö –∑–∞–¥–∞—á, –∏ –º—ã —Å–æ—à–ª–∏—Å—å –Ω–∞ —Ç–æ–º, —á—Ç–æ –æ–Ω–æ –≤ —ç—Ç–æ–º –ø–ª–∞–Ω–µ —Ö–æ—Ä–æ—à–æ, –Ω–æ –º–æ–∂–Ω–æ –ª—É—á—à–µ, to unleash the full power of Monad.`,
    `–∑–Ω–∞–Ω–∏—è —Ö–∞—Å–∫–µ–ª—è –∏–ª–∏ –æ–∫–∞–º–ª–∞ + –ñ–° ‚Äî —Ö–æ—Ä–æ—à–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è`,
    `–Ω–∞ –Ω–µ–º –º–æ–∂–Ω–æ –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ`,
    `–ø—Ä–µ–¥–ª–∞–≥–∞—é –∫ —ç—Ç–æ–º—É —Å–ø–∏—Å–∫—É —è–∑—ã–∫ birb ‚Äî —á—Ç–æ –±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ—Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª—è–º–±–¥–∞—Ö –∏ –∫–æ–º–±–∏–Ω–∞—Ç–æ—Ä–∏–∫–µ –∏—Å–ø–æ–ª—å–∑—É—è —ç–º–æ–¥–∑–∏ like a boss`,
  ];

  // –ü—Ä–∏–º–µ—Ä data.js
  const trainingData = [
    ...spamMessages.map((message) => ({ text: message, label: "spam" })),
    ...hamMessages.map((message) => ({ text: message, label: "ham" })),
  ];

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä
  trainingData.forEach((item) => {
    const processedText = preprocess(item.text);
    classifier.addDocument(processedText, item.label);
  });

  // –û–±—É—á–∞–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä
  classifier.train();
  classifier.save("./classifier.json", function (err, classifier) {
    if (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–æ–¥–µ–ª–∏:", err);
    } else {
      console.log("–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.");
    }
  });
}

export type ClassifierResult = "spam" | "ham";

export function classifyMessage(message, classifier): ClassifierResult {
  const processedMessage = preprocess(message);
  const classification = classifier.classify(
    processedMessage
  ) as ClassifierResult;

  return classification;
}
